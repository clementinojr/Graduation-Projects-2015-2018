
package wspacote;

import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Action;
import javax.xml.ws.FaultAction;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.6-1b01 
 * Generated source version: 2.2
 * 
 */
@WebService(name = "WSJoseM", targetNamespace = "http://wsPacote/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface WSJoseM {


    /**
     * 
     * @param codigo
     * @param valor
     * @param nome
     * @return
     *     returns java.lang.String
     * @throws SQLException_Exception
     * @throws ClassNotFoundException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "ted", targetNamespace = "http://wsPacote/", className = "wspacote.Ted")
    @ResponseWrapper(localName = "tedResponse", targetNamespace = "http://wsPacote/", className = "wspacote.TedResponse")
    @Action(input = "http://wsPacote/WSJoseM/tedRequest", output = "http://wsPacote/WSJoseM/tedResponse", fault = {
        @FaultAction(className = SQLException_Exception.class, value = "http://wsPacote/WSJoseM/ted/Fault/SQLException"),
        @FaultAction(className = ClassNotFoundException_Exception.class, value = "http://wsPacote/WSJoseM/ted/Fault/ClassNotFoundException")
    })
    public String ted(
        @WebParam(name = "codigo", targetNamespace = "")
        String codigo,
        @WebParam(name = "nome", targetNamespace = "")
        String nome,
        @WebParam(name = "valor", targetNamespace = "")
        double valor)
        throws ClassNotFoundException_Exception, SQLException_Exception
    ;

    /**
     * 
     * @param codigo
     * @return
     *     returns wspacote.ObjetoC
     * @throws SQLException_Exception
     * @throws ClassNotFoundException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "correntistaOp", targetNamespace = "http://wsPacote/", className = "wspacote.CorrentistaOp")
    @ResponseWrapper(localName = "correntistaOpResponse", targetNamespace = "http://wsPacote/", className = "wspacote.CorrentistaOpResponse")
    @Action(input = "http://wsPacote/WSJoseM/correntistaOpRequest", output = "http://wsPacote/WSJoseM/correntistaOpResponse", fault = {
        @FaultAction(className = SQLException_Exception.class, value = "http://wsPacote/WSJoseM/correntistaOp/Fault/SQLException"),
        @FaultAction(className = ClassNotFoundException_Exception.class, value = "http://wsPacote/WSJoseM/correntistaOp/Fault/ClassNotFoundException")
    })
    public ObjetoC correntistaOp(
        @WebParam(name = "codigo", targetNamespace = "")
        String codigo)
        throws ClassNotFoundException_Exception, SQLException_Exception
    ;

    /**
     * 
     * @param name
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "hello", targetNamespace = "http://wsPacote/", className = "wspacote.Hello")
    @ResponseWrapper(localName = "helloResponse", targetNamespace = "http://wsPacote/", className = "wspacote.HelloResponse")
    @Action(input = "http://wsPacote/WSJoseM/helloRequest", output = "http://wsPacote/WSJoseM/helloResponse")
    public String hello(
        @WebParam(name = "name", targetNamespace = "")
        String name);

}
